<?php

/**
 * This is the model base class for the table "User".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "User".
 *
 * Columns in table "User" available as properties of the model,
 * followed by relations of table "User" available as properties of the model.
 *
 * @property integer $id
 * @property string $login
 * @property string $name
 * @property string $email
 * @property string $password
 * @property integer $isExcluded
 * @property integer $status
 *
 * @property UPI[] $uPIs
 * @property UserPosition[] $userPositions
 * @property VComUserRole[] $vComUserRoles
 * @property VComUPIPublication[] $vComUPIPublications
 */
abstract class BaseUser extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'User';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'User|Users', $n);
	}

	public static function representingColumn() {
		return 'login';
	}

	public function rules() {
		return array(
			array('login, name, email, password', 'required'),
			array('isExcluded, status', 'numerical', 'integerOnly'=>true),
			array('login, password', 'length', 'max'=>100),
			array('name, email', 'length', 'max'=>500),
			array('isExcluded, status', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, login, name, email, password, isExcluded, status', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'uPIs' => array(self::HAS_MANY, 'UPI', 'user'),
			'userPositions' => array(self::HAS_MANY, 'UserPosition', 'user'),
			'vComUserRoles' => array(self::MANY_MANY, 'VComUserRole', 'UserVComUserRole(user, vcomuserrole)'),
			'vComUPIPublications' => array(self::HAS_MANY, 'VComUPIPublication', 'user'),
		);
	}

	public function pivotModels() {
		return array(
			'vComUserRoles' => 'UserVComUserRole',
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'login' => Yii::t('app', 'Login'),
			'name' => Yii::t('app', 'Name'),
			'email' => Yii::t('app', 'Email'),
			'password' => Yii::t('app', 'Password'),
			'isExcluded' => Yii::t('app', 'Is Excluded'),
			'status' => Yii::t('app', 'Status'),
			'uPIs' => null,
			'userPositions' => null,
			'vComUserRoles' => null,
			'vComUPIPublications' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('login', $this->login, true);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('password', $this->password, true);
		$criteria->compare('isExcluded', $this->isExcluded);
		$criteria->compare('status', $this->status);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}