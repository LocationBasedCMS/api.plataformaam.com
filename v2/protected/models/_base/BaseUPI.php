<?php

/**
 * This is the model base class for the table "UPI".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "UPI".
 *
 * Columns in table "UPI" available as properties of the model,
 * followed by relations of table "UPI" available as properties of the model.
 *
 * @property integer $id
 * @property integer $user
 * @property integer $upitype
 * @property string $title
 * @property string $description
 * @property string $content
 *
 * @property User $user0
 * @property UPIType $upitype0
 * @property UPIPosition[] $uPIPositions
 * @property VComUPIPublication[] $vComUPIPublications
 */
abstract class BaseUPI extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'UPI';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'UPI|UPIs', $n);
	}

	public static function representingColumn() {
		return 'title';
	}

	public function rules() {
		return array(
			array('user, upitype', 'required'),
			array('user, upitype', 'numerical', 'integerOnly'=>true),
			array('title, description, content', 'safe'),
			array('title, description, content', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, user, upitype, title, description, content', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'user0' => array(self::BELONGS_TO, 'User', 'user'),
			'upitype0' => array(self::BELONGS_TO, 'UPIType', 'upitype'),
			'uPIPositions' => array(self::HAS_MANY, 'UPIPosition', 'upi'),
			'vComUPIPublications' => array(self::HAS_MANY, 'VComUPIPublication', 'upi'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'user' => null,
			'upitype' => null,
			'title' => Yii::t('app', 'Title'),
			'description' => Yii::t('app', 'Description'),
			'content' => Yii::t('app', 'Content'),
			'user0' => null,
			'upitype0' => null,
			'uPIPositions' => null,
			'vComUPIPublications' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('user', $this->user);
		$criteria->compare('upitype', $this->upitype);
		$criteria->compare('title', $this->title, true);
		$criteria->compare('description', $this->description, true);
		$criteria->compare('content', $this->content, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}