<?php

/**
 * This is the model base class for the table "UserPosition".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "UserPosition".
 *
 * Columns in table "UserPosition" available as properties of the model,
 * followed by relations of table "UserPosition" available as properties of the model.
 *
 * @property integer $id
 * @property integer $user
 * @property string $currentTime
 * @property string $content
 * @property double $latitude
 * @property double $longitude
 *
 * @property User $user0
 */
abstract class BaseUserPosition extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'UserPosition';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'UserPosition|UserPositions', $n);
	}

	public static function representingColumn() {
		return 'currentTime';
	}

	public function rules() {
		return array(
			array('user, currentTime, latitude, longitude', 'required'),
			array('user', 'numerical', 'integerOnly'=>true),
			array('latitude, longitude', 'numerical'),
			array('content', 'safe'),
			array('content', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, user, currentTime, content, latitude, longitude', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'user0' => array(self::BELONGS_TO, 'User', 'user'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'user' => null,
			'currentTime' => Yii::t('app', 'Current Time'),
			'content' => Yii::t('app', 'Content'),
			'latitude' => Yii::t('app', 'Latitude'),
			'longitude' => Yii::t('app', 'Longitude'),
			'user0' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('user', $this->user);
		$criteria->compare('currentTime', $this->currentTime, true);
		$criteria->compare('content', $this->content, true);
		$criteria->compare('latitude', $this->latitude);
		$criteria->compare('longitude', $this->longitude);
                
                $criteria->order('currentTime DESC');
                
		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
                    
		));
	}
        

}